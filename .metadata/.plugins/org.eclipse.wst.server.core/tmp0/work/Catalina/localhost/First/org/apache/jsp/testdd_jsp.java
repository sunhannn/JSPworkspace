/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-03-07 05:53:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class testdd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <title>Bootstrap Example</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.1/dist/jquery.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("  <style>\r\n");
      out.write("    body {background-color: #f5f6f7;}\r\n");
      out.write("    h2 {\r\n");
      out.write("      color: #03c75a;\r\n");
      out.write("      font-weight: bolder;\r\n");
      out.write("      font-size: 50pt;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      letter-spacing: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    small {\r\n");
      out.write("      color: #999;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    label {\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .cnum {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @media (min-width: 992px) {\r\n");
      out.write("      .container, .container-lg, .container-md, .container-sm {\r\n");
      out.write("        max-width: 960px;\r\n");
      out.write("      }\r\n");
      out.write("      .col-md-8 {\r\n");
      out.write("        padding-right: 0px;\r\n");
      out.write("      }\r\n");
      out.write("      .col-md-4{\r\n");
      out.write("        padding-left: 0px;\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @media (min-width: 768px) {\r\n");
      out.write("      .container, .container-md, .container-sm {\r\n");
      out.write("        max-width: 720px;\r\n");
      out.write("      }\r\n");
      out.write("      .col-md-8 {\r\n");
      out.write("        padding-right: 0px;\r\n");
      out.write("      }\r\n");
      out.write("      .col-md-4{\r\n");
      out.write("        padding-left: 0px;\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @media (min-width: 576px) {\r\n");
      out.write("      .container, .container-sm {\r\n");
      out.write("        max-width: 540px;\r\n");
      out.write("      }\r\n");
      out.write("      .col-md-8 {\r\n");
      out.write("        padding-right: 13px;\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <h2 class=\"mt-5 mb-3\">NAVER</h2>\r\n");
      out.write("    <form class=\"needs-validation\" novalidate action=\"testGo.jsp\" method=\"get\">\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"id\">아이디</label>\r\n");
      out.write("        <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" required>\r\n");
      out.write("        <div class=\"valid-feedback\">멋진 아이디네요!</div>\r\n");
      out.write("        <div class=\"invalid-feedback\">필수 정보입니다.</div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"pwd\">비밀번호</label>\r\n");
      out.write("        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required>\r\n");
      out.write("        <div class=\"invalid-feedback\">필수 정보입니다.</div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"passwordre\">비밀번호 재확인</label>\r\n");
      out.write("        <input type=\"password\" class=\"form-control\" id=\"passwordre\" name=\"passwordre\" required>\r\n");
      out.write("        <div class=\"invalid-feedback\">필수 정보입니다.</div>\r\n");
      out.write("      </div><br>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"name\">이름</label>\r\n");
      out.write("        <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" required>\r\n");
      out.write("        <div class=\"invalid-feedback\">필수 정보입니다.</div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"year\">생년월일</label>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("          <div class=\"col\">\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"year\" name=\"year\" placeholder=\"년(4자)\" required>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col\">\r\n");
      out.write("            <select class=\"form-control\" id=\"mon\" name=\"mon\" required>\r\n");
      out.write("              <option value=\"\">월</option>\r\n");
      out.write("              <option>1</option>\r\n");
      out.write("              <option>2</option>\r\n");
      out.write("              <option>3</option>\r\n");
      out.write("              <option>4</option>\r\n");
      out.write("              <option>5</option>\r\n");
      out.write("              <option>6</option>\r\n");
      out.write("              <option>7</option>\r\n");
      out.write("              <option>8</option>\r\n");
      out.write("              <option>9</option>\r\n");
      out.write("              <option>10</option>\r\n");
      out.write("              <option>11</option>\r\n");
      out.write("              <option>12</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col\">\r\n");
      out.write("            <input type=\"number\" class=\"form-control\" id=\"date\" name=\"date\" min=\"1\" max=\"31\" placeholder=\"일\" required>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"invalid-feedback\">필수 정보입니다.</div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"gender\">성별</label>\r\n");
      out.write("        <select class=\"form-control\" id=\"gender\" name=\"gender\" required>\r\n");
      out.write("          <option value=\"\">성별</option>\r\n");
      out.write("          <option>남</option>\r\n");
      out.write("          <option>여</option>\r\n");
      out.write("          <option>선택안함</option>\r\n");
      out.write("        </select>\r\n");
      out.write("        <div class=\"invalid-feedback\">필수 정보입니다.</div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"email\">본인 확인 이메일<small>(선택)</small></label>\r\n");
      out.write("        <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\" required>\r\n");
      out.write("        <div class=\"invalid-feedback\">필수 정보입니다.</div>\r\n");
      out.write("      </div><br>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <label for=\"phone\">휴대전화</label>\r\n");
      out.write("        <select class=\"form-control\" id=\"phone\" name=\"phone\" required>\r\n");
      out.write("          <option value=\"+82\">대한민국 +82</option>\r\n");
      out.write("        </select>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("          <div class=\"col-md-8\"><input type=\"tel\" class=\"form-control mt-2\" id=\"cnum\" placeholder=\"전화번호 입력\" name=\"cnum\" required>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-md-4\"><button type=\"button\" class=\"btn btn-success mt-2 cnum\">인증번호 받기</button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <input type=\"text\" class=\"form-control mt-2\" disabled id=\"cnumip\" placeholder=\"인증번호를 입력하세요.\" name=\"cnumip\">\r\n");
      out.write("        <div class=\"invalid-feedback\">필수 정보입니다.</div>\r\n");
      out.write("      </div><br>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"form-group\">\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-success form-control\">가입하기</button>\r\n");
      out.write("      </div>\r\n");
      out.write("    </form>\r\n");
      out.write("  </div>\r\n");
      out.write("<script>\r\n");
      out.write("(function() {\r\n");
      out.write("  'use strict';\r\n");
      out.write("  window.addEventListener('load', function() {\r\n");
      out.write("    var forms = document.getElementsByClassName('needs-validation');\r\n");
      out.write("    var validation = Array.prototype.filter.call(forms, function(form) {\r\n");
      out.write("      form.addEventListener('submit', function(event) {\r\n");
      out.write("        if (form.checkValidity() === false) {\r\n");
      out.write("          event.preventDefault();\r\n");
      out.write("          event.stopPropagation();\r\n");
      out.write("        }\r\n");
      out.write("        form.classList.add('was-validated');\r\n");
      out.write("        valChk(event);\r\n");
      out.write("      }, false);\r\n");
      out.write("    });\r\n");
      out.write("  }, false);\r\n");
      out.write("})();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function valChk(e){\r\n");
      out.write("  e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("  var emailRegex = /^[-!#$%\\s'*+./0-9=?A-Z^_a-z{|}~]+@[A-Za-z{|}~]+.[A-Za-z]+$/,\r\n");
      out.write("  idRegex = /^[0-9A-Z_a-z]+$/,\r\n");
      out.write("  phoneRegex = /^010\\d{4}\\d{4}$/,\r\n");
      out.write("  yearRegex = /^\\d{4}$/,\r\n");
      out.write("  monRegex = /^\\d{1,2}$/,\r\n");
      out.write("  dateRegex = /^\\d{1,2}$/,\r\n");
      out.write("  id = $( \"#id\" ),\r\n");
      out.write("  name = $( \"#name\" ),\r\n");
      out.write("  email = $( \"#email\" ),\r\n");
      out.write("  password = $( \"#password\" ),\r\n");
      out.write("  passwordre = $( \"#passwordre\" ),\r\n");
      out.write("  year = $( \"#year\" ),\r\n");
      out.write("  mon = $( \"#mon\" ),\r\n");
      out.write("  year = $( \"#year\" ),\r\n");
      out.write("  date = $( \"#date\" ),\r\n");
      out.write("  phone = $( \"#cnum\" );\r\n");
      out.write("\r\n");
      out.write("  var valid = true;\r\n");
      out.write("  valid = valid && checkRegexp( id, idRegex,\"아이디 입력 형식이 잘못되었습니다.\" );\r\n");
      out.write("  valid = valid && checkRegexp( year, yearRegex,\"생년은 네 자리 숫자로 입력해주세요.\" );\r\n");
      out.write("  valid = valid && checkRegexp( mon, monRegex,\"태어난 월을 입력해주세요.\" );\r\n");
      out.write("  valid = valid && checkRegexp( date, dateRegex,\"태어난 일을 입력해주세요.\" );\r\n");
      out.write("  valid = valid && checkRegexp( email, emailRegex,\"이메일 입력 형식이 잘못되었습니다.\" );\r\n");
      out.write("  valid = valid && checkRegexp( phone, phoneRegex,\"전화번호 입력 형식이 잘못되었습니다.\" );\r\n");
      out.write("  valid = valid && checkLength( id, \"아이디\", 4, 16 );\r\n");
      out.write("  valid = valid && checkLength( name, \"사용자이름\", 3, 16 );\r\n");
      out.write("  valid = valid && checkLength( password, \"비밀번호\", 5, 16 );\r\n");
      out.write("  valid = valid && checkMatch( password.val(), passwordre.val());\r\n");
      out.write("\r\n");
      out.write("//비밀번호 매칭\r\n");
      out.write("function checkMatch(p, pre){\r\n");
      out.write("  let pval = p;\r\n");
      out.write("  console.log(pval);\r\n");
      out.write("  let pvalre = pre;\r\n");
      out.write("  console.log(pvalre);\r\n");
      out.write("\r\n");
      out.write("  let res = true;\r\n");
      out.write("\r\n");
      out.write("  if(pval != pvalre){\r\n");
      out.write("    alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("    res = false;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  return res;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//정규식 일치 여부 확인\r\n");
      out.write("  function checkRegexp( o, regexp, n ) {\r\n");
      out.write("    let cnt = $(\"#\"+o.attr('id')+\" ~ div.invalid-feedback\").length;\r\n");
      out.write("    console.log('o: ',o);\r\n");
      out.write("    console.log('cnt: ',cnt);\r\n");
      out.write("    \r\n");
      out.write("    if ( !( regexp.test( o.val() ) ) ) {      \r\n");
      out.write("      if(cnt == 0) o.closest(\"div.row\").nextAll(\"div.invalid-feedback\").eq(0).text(n).show();\r\n");
      out.write("      else{\r\n");
      out.write("         o.nextAll(\"div.invalid-feedback\").eq(0).text(n).show();\r\n");
      out.write("         o.nextAll(\"div.valid-feedback\").eq(0).hide();\r\n");
      out.write("      }\r\n");
      out.write("      return false;\r\n");
      out.write("    } else {\r\n");
      out.write("      if(cnt == 0) o.closest(\"div.row\").nextAll(\"div.invalid-feedback\").eq(0).text(n).hide();\r\n");
      out.write("      else o.nextAll(\"div.invalid-feedback\").eq(0).text(n).hide();\r\n");
      out.write("      return true;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function checkLength( o, n, min, max ) { \r\n");
      out.write("      if ( o.val().length > max || o.val().length < min ) {\r\n");
      out.write("        return false;\r\n");
      out.write("      } else {\r\n");
      out.write("        return true;\r\n");
      out.write("      }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  if(valid) e.target.submit();\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
